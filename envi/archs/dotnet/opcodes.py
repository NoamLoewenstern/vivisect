from envi.archs.dotnet.opconst import *

opcodes = {
    # General format is (type, args, pops, pushes, name)
    # More specific Format is (type, (arg_mask, arg_mask), (pop_mask, pop_mask), (push_mask, push_mask), name)
    # So each element should be of length 5, with elements 1, 2, 3, being of type tuple of len 2
    0x0: (INS_NOP,     (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'nop'),
    0x1: (INS_BREAK,   (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'break'),
    0x2: (INS_LOADARG, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldarg.0'),
    0x3: (INS_LOADARG, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldarg.1'),
    0x4: (INS_LOADARG, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldarg.2'),
    0x5: (INS_LOADARG, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldarg.3'),

    0x6: (INS_LOADLOC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE),'lodloc.0'),
    0x7: (INS_LOADLOC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE),'lodloc.1'),
    0x8: (INS_LOADLOC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE),'lodloc.2'),
    0x9: (INS_LOADLOC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE),'lodloc.3'),

    0xA: (INS_STLOC, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'stloc.0'),
    0xB: (INS_STLOC, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'stloc.1'),
    0xC: (INS_STLOC, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'stloc.2'),
    0xD: (INS_STLOC, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'stloc.3'),

    0xE: (INS_LOADARG, (TYPE_UINT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldarg.s'),
    0xF: (INS_LOADARG, (TYPE_UINT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), 'ldarga.s'),

    0x10: (INS_LOADLOC, (TYPE_UINT8, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'starg.s'),

    0x11: (INS_LOADLOC, (TYPE_UINT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), 'ldloc.s'),
    0x12: (INS_LOADLOC, (TYPE_UINT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), 'ldloca.s'),

    0x13: (INS_STLOC, (TYPE_UINT8, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'stloc.s'),

    # So yes, this loads a ref. That ref is null though  
    0x14: (INS_LDNULL, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), 'ldnull'),

    0x15: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.m1'),
    0x16: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.0'),
    0x17: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.1'),
    0x18: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.2'),
    0x19: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.3'),
    0x1A: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.4'),
    0x1B: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.5'),
    0x1C: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.6'),
    0x1D: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.7'),
    0x1E: (INS_LDC, (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.8'),
    0x1F: (INS_LDC, (TYPE_INT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4.s'),

    0x20: (INS_LDC, (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldc.i4'),
    0x21: (INS_LDC, (TYPE_INT64, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_INT64, TYPE_NONE), 'ldc.i8'),

    0x22: (INS_LDC, (TYPE_FLOAT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'ldc.r4'),
    0x23: (INS_LDC, (TYPE_FLOAT64, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'ldc.r8'),

    # yes there is a gap here where 0x24 should be
    0x25: (INS_DUP, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_ANY, TYPE_ANY), 'dup'),
    0x26: (INS_POP, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'pop'),

    0x27: (INS_JMP,  (TYPE_METHOD, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'jmp'),
    0x28: (INS_CALL, (TYPE_METHOD, TYPE_NONE), (TYPE_MULTI, TYPE_NONE), (TYPE_RETVAL, TYPE_NONE), 'call'),
    0x29: (INS_CALLI, (TYPE_SIG, TYPE_NONE), (TYPE_MULTI, TYPE_NONE), (TYPE_RETVAL, TYPE_NONE), 'calli'),
    0x2A: (INS_RET, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'ret'),

    0x2B: (INS_BR | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'br.s'),
    # TODO: also brnull/brzero. How to differentiate?
    0x2C: (INS_BRFALSE | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'brfalse.s'),
    # TODO: also brinst.s how to differentiate?
    0x2D: (INS_BRTRUE | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'brtrue.s'),
    0x2E: (INS_BEQ | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'beq.s'),
    0x2F: (INS_BGE | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bge.s'),
    0x30: (INS_BGT | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bgt.s'),
    0x31: (INS_BLE | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'ble.s'),
    0x32: (INS_BLT | INS_SHORTENED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'blt.s'),
    0x33: (INS_BNE | INS_SHORTENED | INS_UNORDERED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bne.un.s'),
    0x34: (INS_BGE | INS_SHORTENED | INS_UNORDERED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bge.un.s'),
    0x35: (INS_BGT | INS_SHORTENED | INS_UNORDERED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bgt.un.s'),
    0x36: (INS_BLE | INS_SHORTENED | INS_UNORDERED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'ble.un.s'),
    0x37: (INS_BLT | INS_SHORTENED | INS_UNORDERED, (TYPE_INT8, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'blt.un.s'),

    0x38: (INS_BR, (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'br'),
    0x39: (INS_BRFALSE, (TYPE_INT32, TYPE_NONE), (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'brfalse'),
    0x3A: (INS_BRTRUE, (TYPE_INT32, TYPE_NONE), (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'brtrue'),
    0x3B: (INS_BEQ, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'beq'),
    0x3C: (INS_BGE, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bge'),
    0x3D: (INS_BGT, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bgt'),
    0x3E: (INS_BLE, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'ble'),
    0x3F: (INS_BLT, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'blt'),
    0x40: (INS_BNE | INS_UNORDERED, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bne.un'),
    0x41: (INS_BGE | INS_UNORDERED, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bge.un'),
    0x42: (INS_BGT | INS_UNORDERED, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'bgt.un'),
    0x43: (INS_BLE | INS_UNORDERED, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'ble.un'),
    0x44: (INS_BLT | INS_UNORDERED, (TYPE_INT32, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_NONE, TYPE_NONE), 'blt.un'),

    0x45: (INS_SWITCH, (TYPE_INT32, TYPE_INT32), (TYPE_INT32, TYPE_NONE), (TYPE_NONE, TYPE_NONE), 'switch'),  # TODO
    0x46: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.i1'),
    0x47: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.u1'),
    0x48: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.i2'),
    0x49: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.u2'),
    0x4A: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.i4'),
    0x4B: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.u4'),
    # also ldind.u8
    0x4C: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT64, TYPE_NONE), 'ldind.i8'),
    0x4D: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'ldind.i'),
    0x4E: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'ldind.r4'),
    0x4F: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'ldind.r8'),
    0x50: (INS_LDIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_NONE), (TYPE_REF, TYPE_NONE), 'ldind.ref'),

    0x51: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_REF, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stind.ref'),
    0x52: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.i1'),
    0x53: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.i2'),
    0x54: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.i4'),
    0x55: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_INT32, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.i8'),
    0x56: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_FLOAT80, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.r4'),
    0x57: (INS_STIND, (TYPE_NONE, TYPE_NONE), (TYPE_FLOAT80, TYPE_REF), (TYPE_NONE, TYPE_NONE), 'stdind.r8'),
    0x58: (INS_ADD, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'add'),
    0x59: (INS_SUB, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'sub'),
    0x5A: (INS_MUL, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'mul'),
    0x5B: (INS_DIV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'div'),
    0x5C: (INS_DIV | INS_UNORDERED, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'div.un'),
    0x5D: (INS_REM, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'rem'),
    0x5E: (INS_REM | INS_UNORDERED, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'rem.un'),
    0x5F: (INS_AND, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'and'),
    0x60: (INS_OR, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'or'),
    0x61: (INS_XOR, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'xor'),
    0x62: (INS_SHL, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'shl'),
    0x63: (INS_SHR, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'shr'),
    0x64: (INS_SHR | INS_UNORDERED, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_ANY), (TYPE_ANY, TYPE_NONE), 'shr.un'),
    0x65: (INS_NEG, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_ANY, TYPE_ANY), 'neg'),
    0x66: (INS_NOT, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_ANY, TYPE_ANY), 'not'),

    0x67: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'conv.i1'),
    0x68: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'conv.i2'),
    0x69: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'conv.i4'),
    0x6A: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT64, TYPE_NONE), 'conv.i8'),
    0x6B: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'conv.r4'),
    0x6C: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_FLOAT80, TYPE_NONE), 'conv.r8'),
    0x6D: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT32, TYPE_NONE), 'conv.u4'),
    0x6E: (INS_CONV, (TYPE_NONE, TYPE_NONE), (TYPE_ANY, TYPE_NONE), (TYPE_INT64, TYPE_NONE), 'conv.u8'),

    0x6F: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x70: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x71: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x72: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x73: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x74: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x75: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x76: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x77: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x78: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x79: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7A: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7B: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7C: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7D: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7E: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x7F: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0x80: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x81: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x82: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x83: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x84: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x85: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x86: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x87: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x88: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x89: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8A: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8B: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8C: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8D: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8E: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x8F: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0x90: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x91: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x92: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x93: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x94: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x95: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x96: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x97: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x98: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x99: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9A: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9B: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9C: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9D: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9E: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0x9F: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0xA0: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA1: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA2: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA3: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA4: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA5: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA6: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA7: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA8: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xA9: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAA: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAB: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAC: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAD: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAE: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xAF: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0xB0: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB1: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB2: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB3: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB4: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB5: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB6: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB7: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB8: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xB9: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBA: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBB: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBC: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBD: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBE: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xBF: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0xC0: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC1: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC2: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC3: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC4: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC5: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC6: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC7: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC8: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xC9: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCA: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCB: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCC: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCD: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCE: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xCF: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0xD0: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD1: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD2: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD3: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD4: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD5: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD6: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD7: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD8: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xD9: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDA: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDB: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDC: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDD: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDE: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
    0xDF: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),

    0xE0: (INS_, (TYPE_, TYPE_), (TYPE_, TYPE_), (TYPE_, TYPE_), ''),
}